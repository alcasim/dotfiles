#!/usr/bin/env bash

_help(){
  echo -e "Runs git commands recusively by looking for git repos under the current directory."
  echo -e "  git recursive [CMD]."
  echo -e "Available subcommands are: pull status clean reset"\\n
  echo -e "Example: ${BOLD}git recursive pull ${NORM}"\\n
  exit 1
}

function git-recursive() {
  git_cmd=${1}
  cdir=$(pwd)
  bdir='.'
  if [ ! -z "$2" ]; then
    bdir=${2}
  fi
  repos=$(find ${bdir} -type d -name .git -exec sh -c "dirname '{}/'" \; | grep -Ev '.*\/\..*')
  for d in $repos; do
    echo -e "${COL_BLUE}>>>${COL_RESET} $d"
    cd $d
    # echo -e "${COL_GREY}${git_cmd}${COL_RESET}"
    echo -ne "${COL_GREY}"; eval ${git_cmd}; echo -ne "${COL_RESET}"
    cd $cdir
  done
}

case "${1}" in
  pull) git-recursive 'git pull' ${2} ;;
  fetch) git-recursive 'git fetch' ${2} ;;
  status|sb) git-recursive 'git status -sb' ${2} ;;
  clean) git-recursive 'git clean -fdX' ${2} ;;
  reset) git-recursive 'git fetch origin; git reset --hard $(git remote | head -1)/$(git name-rev --name-only HEAD); git clean -fdx' ${2} ;;
  *) echo "Unrecognised subcommand ${1}"; _help ;;
esac
